version: "3.8"

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-modelhub}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-modelhub123}
      POSTGRES_DB: ${POSTGRES_DB:-modelhub}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-modelhub}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      # Database
      DATABASE_URL: postgresql://${POSTGRES_USER:-modelhub}:${POSTGRES_PASSWORD:-modelhub123}@db:5432/${POSTGRES_DB:-modelhub}

      # JWT
      SECRET_KEY: ${SECRET_KEY:-your-super-secret-key-change-this-in-production}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES:-30}

      # CORS
      BACKEND_CORS_ORIGINS: '["http://localhost:3000","https://localhost:3000","http://localhost:8080","https://localhost:8080"]'

      # Upload settings
      UPLOAD_DIR: /app/uploads
      MAX_UPLOAD_SIZE: ${MAX_UPLOAD_SIZE:-100}

      # Environment
      ENVIRONMENT: ${ENVIRONMENT:-development}
      PROJECT_NAME: "Model Hub API"

    volumes:
      - ./uploads:/app/uploads
      - ./sqlite_db:/app/sqlite_db
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD",
          "python",
          "-c",
          "import requests; requests.get('http://localhost:8000/health')",
        ]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
